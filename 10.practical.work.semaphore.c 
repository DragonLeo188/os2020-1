#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t s;


void *primeNum() 
{
    int i, j, count = 0;
    for(i = 2; i < 1000000; i++)
    {
        for(j = 2;j < i; j++)
        {
            if(i % j == 0)
            {
                ++count;
            }
            if(count == 1)
            {
                sem_wait(&s);
                printf("%d ", i);
                sem_post(&s);
            }
        }
    }
    printf("\n");
}

void *seqFibon() 
{
    int t1 = 0, t2 = 1, nextTerm = 0;
    nextTerm = t1 + t2;
    while (nextTerm <= 1000000)
    {
        sem_wait(&s);
        printf("%d ", nextTerm);
        sem_post(&s);
        t1 = t2;
        t2 = nextTerm;
        nextTerm = t1 + t2;
    }
    printf("\n");
}

int main() 
{   
    sem_init(&s, 0, 1);

    pthread_t prime, fibon;
    pthread_create(&prime, NULL, primeNum, NULL);
    pthread_create(&fibon, NULL, seqFibon, NULL);
    pthread_join(prime, NULL);
    pthread_join(fibon, NULL);

    sem_destroy(&s);
    printf("\n");
    return 0;
}